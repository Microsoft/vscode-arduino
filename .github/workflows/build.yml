name: CI-Tests
on:
  push:
    branches:
      - actions
      - develop
    tags:
      - v*
      - v*.*.*-[a-zA-Z]*
  pull_request:
    branches:
      - master
      - develop


jobs:
  Build:

    runs-on: ${{ matrix.os }} 
    strategy:
      matrix:
        # os: [ ubuntu-latest, macos-latest, windows-latest ] 
        os: [ windows-latest ]
    
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Get Node
        uses: actions/setup-node@v1
        with:
          node-version: 11.x
      - name: linux setup
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          export CXX="g++-4.9" CC="gcc-4.9" DISPLAY=:99.0
          sleep 3
          wget https://downloads.arduino.cc/arduino-1.8.2-linux64.tar.xz -P /home/$USER
          tar -xvf /home/$USER/arduino-1.8.2-linux64.tar.xz -C /home/$USER/
          sudo ln -s /home/$USER/arduino-1.8.2/arduino /usr/bin/arduino
          sudo apt-get update
          sudo apt-get install g++-multilib
          sudo apt-get install -y build-essential
          sudo apt-get install libudev-dev
      - name: macos setup
        if: ${{ matrix.os == 'macos-latest' }}
        run: | 
          /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
          brew install arduino --cask
      - name: preinstall 
        run: | 
          npm install -g node-gyp
          npm install -g vsce
          npm install -g gulp
      - name: install
        run: npm install
      - name: scripts
        run: |
          gulp tslint
          gulp genAikey
          vsce package
      - name: run tests
        if: ${{ matrix.os != 'windows-latest' }}
        uses: GabrielBB/xvfb-action@v1
        with:
          run: npm test --silent
  
  Package:
    needs: Build
    runs-on: windows-latest
    env:
      VERSION: ${{ GITHUB_REF#refs/tags/*/ }}
    # if: env.VERSION == '!v0.[0-9].[0-9]-[rR]*'
    steps:
    - run: echo ${{env.VERSION}}
    - name: Checkout
      uses: actions/checkout@v2
    - name: Get Node
      uses: actions/setup-node@v1
      with:
        node-version: 11.x
    - name: preinstall 
      run: | 
        npm install -g node-gyp
        npm install -g vsce
        npm install -g gulp
    - name: install
      run: npm install
    - name: scripts
      run: |
        gulp tslint
        gulp genAikey
        vsce package
    - name: create artifact
      uses: actions/upload-artifact@v1
      with:
        name: vscode-arduino-${{env.VERSION}}.vsix
        path: ${{github.workspace}}/vscode-arduino/vscode-arduino/vscode-arduino-0.3.4.vsix
      


